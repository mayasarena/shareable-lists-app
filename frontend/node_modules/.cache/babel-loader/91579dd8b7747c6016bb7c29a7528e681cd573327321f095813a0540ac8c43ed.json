{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ListModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { DataContext } from './DataContext';\n\n// The modal for editing or adding a list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListModal = ({\n  mode,\n  setShowModal,\n  list\n}) => {\n  _s();\n  const editMode = mode === 'edit' ? true : false;\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n  const {\n    getData\n  } = useContext(DataContext);\n  const [listData, setListData] = useState({\n    owner_id: editMode ? list.owner_id : cookies.UserID,\n    title: editMode ? list.title : '',\n    shared: editMode ? list.shared : false,\n    color: editMode ? list.color : 'white'\n  });\n\n  // Method for posting a new list to the database\n  const postListData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(listData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create list');\n      }\n      const newList = await response.json();\n      console.log('New list created:', newList);\n      setShowModal(false);\n      getData();\n    } catch (error) {\n      console.error('Error creating list:', error.message);\n      throw error;\n    }\n  };\n  const editListData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(listData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to edit list');\n      }\n      const editedList = await response.json();\n      console.log('List edited:', editedList);\n      setShowModal(false);\n      getData();\n    } catch (error) {\n      console.error('Error editing list:', error.message);\n      throw error;\n    }\n  };\n  const deleteList = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        getData();\n      } else {\n        console.error(`Error deleting list: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error deleting list:', error);\n    }\n  };\n  const handleChange = e => {\n    console.log(\"changing!\", e);\n    const {\n      value\n    } = e.target;\n    setListData(listData => ({\n      ...listData,\n      title: value\n    }));\n    console.log(listData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [mode, \" your list!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          maxLength: 30,\n          placeholder: \"List name goes here\",\n          name: \"title\",\n          value: listData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: () => editMode ? editListData : postListData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteList,\n          children: \"DELETE LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(ListModal, \"5TgPUjlowBbS0nX1vjsXdq/zZis=\", false, function () {\n  return [useCookies];\n});\n_c = ListModal;\nexport default ListModal;\nvar _c;\n$RefreshReg$(_c, \"ListModal\");","map":{"version":3,"names":["React","useState","useContext","useCookies","DataContext","jsxDEV","_jsxDEV","ListModal","mode","setShowModal","list","_s","editMode","cookies","setCookie","removeCookie","getData","listData","setListData","owner_id","UserID","title","shared","color","postListData","e","preventDefault","response","fetch","process","env","REACT_APP_SERVERURL","method","headers","body","JSON","stringify","ok","Error","newList","json","console","log","error","message","editListData","id","editedList","deleteList","statusText","handleChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","required","maxLength","placeholder","name","onChange","type","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ListModal.js"],"sourcesContent":["import React from 'react';\nimport { useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { DataContext } from './DataContext';\n\n// The modal for editing or adding a list\nconst ListModal = ({ mode, setShowModal, list }) => {\n    const editMode = mode === 'edit' ? true : false\n    const [cookies, setCookie, removeCookie] = useCookies(null)\n    const { getData } = useContext(DataContext);\n\n    const [listData, setListData] = useState({\n        owner_id: editMode ? list.owner_id : cookies.UserID,\n        title: editMode ? list.title : '',\n        shared: editMode ? list.shared : false,\n        color: editMode ? list.color : 'white'\n    })\n\n    // Method for posting a new list to the database\n    const postListData = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(listData)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to create list');\n            }\n\n            const newList = await response.json();\n            console.log('New list created:', newList)\n            setShowModal(false)\n            getData()\n\n        } catch(error) {\n            console.error('Error creating list:', error.message);\n            throw error;\n        }\n    };\n\n    const editListData = async(e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n                method: 'PUT',\n                headers: { \n                    'Content-Type': 'application/json' \n                },\n                body: JSON.stringify(listData)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to edit list');\n            }\n\n            const editedList = await response.json();\n            console.log('List edited:', editedList);\n            setShowModal(false);\n            getData();\n        } catch(error) {\n            console.error('Error editing list:', error.message);\n            throw error;\n        }\n    }\n\n    const deleteList = async () => {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n            method: 'DELETE'\n          });\n          if (response.ok) {\n            getData();\n          } else {\n            console.error(`Error deleting list: ${response.statusText}`);\n          }\n        } catch (error) {\n          console.error('Error deleting list:', error);\n        }\n      }\n\n    const handleChange = (e) => {\n        console.log(\"changing!\", e)\n        const { value } = e.target\n\n        setListData(listData => ({\n            ...listData,\n            title: value\n        }))\n        console.log(listData)\n    };\n\n    return (\n        <div className=\"overlay\">\n            <div className=\"modal\">\n                <div className=\"form-title-container\">\n                    <h3>{mode} your list!</h3>\n                    <button onClick={() => setShowModal(false)}>X</button>\n                </div>\n\n                <form>\n                    <input \n                        required \n                        maxLength={30} \n                        placeholder=\"List name goes here\" \n                        name=\"title\"\n                        value={listData.title} \n                        onChange={handleChange}\n                    />\n                    <br />\n                    <input type=\"submit\" onClick={() => editMode ? editListData : postListData}/>\n                    {editMode && <button onClick={deleteList}>DELETE LIST</button>}\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ListModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}