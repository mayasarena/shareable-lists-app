{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header';\nimport AuthForm from './components/AuthForm';\nimport Sidebar from './components/Sidebar';\nimport './index.css';\nimport { DataContext } from './contexts/DataContext';\nimport { UserContext } from './contexts/UserContext';\nimport { AppContainer, CenteredContainer, ContentContainer, DashboardContainer } from './styles/Container.styled';\nimport Dashboard from './components/Dashboard';\nimport Profile from './components/Profile';\n\n// App component responsible for rendering the application interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Accessing user data from UserContext\n  const {\n    user\n  } = useContext(UserContext);\n  // State variables to manage selected list, sidebar visibility, and profile visibility\n  const [selectedList, setSelectedList] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n\n  // Accessing lists and sharedLists data along with their respective functions from DataContext\n  const {\n    lists,\n    sharedLists,\n    getLists,\n    getSharedLists\n  } = useContext(DataContext);\n\n  // Merging lists and sharedLists into a single array\n  const allLists = [...(lists || []), ...(sharedLists || [])];\n\n  // Effect to update the selectedList when lists or sharedLists change\n  useEffect(() => {\n    if (allLists && selectedList) {\n      const updatedSelectedList = allLists.find(list => list.id === selectedList.id);\n      console.log('updating selected list');\n      setSelectedList(updatedSelectedList);\n      if (!updatedSelectedList) {\n        setSelectedList(null);\n      }\n    }\n  }, [lists, selectedList, sharedLists]);\n\n  // Effect to log the status of openProfile\n  useEffect(() => {\n    console.log('open profile', openProfile);\n  }, [openProfile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!user && /*#__PURE__*/_jsxDEV(CenteredContainer, {\n      children: /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedList: selectedList,\n        setSelectedList: setSelectedList,\n        isOpen: isOpen,\n        setIsOpen: setIsOpen,\n        openProfile: openProfile,\n        setOpenProfile: setOpenProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n        backgroundcolor: selectedList ? '#fff' : '#f2f2f2',\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          setSelectedList: setSelectedList,\n          isOpen: isOpen,\n          setIsOpen: setIsOpen,\n          setOpenProfile: setOpenProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), selectedList && /*#__PURE__*/_jsxDEV(TaskList, {\n          list: selectedList,\n          tasks: selectedList.tasks,\n          setSelectedList: setSelectedList\n        }, selectedList.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), !selectedList && !openProfile && /*#__PURE__*/_jsxDEV(DashboardContainer, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            setSelectedList: setSelectedList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), openProfile && /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"O/I9c4B04IZ0kreQhDBaIOBBHyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useContext","TaskList","Header","AuthForm","Sidebar","DataContext","UserContext","AppContainer","CenteredContainer","ContentContainer","DashboardContainer","Dashboard","Profile","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","selectedList","setSelectedList","isOpen","setIsOpen","openProfile","setOpenProfile","lists","sharedLists","getLists","getSharedLists","allLists","updatedSelectedList","find","list","id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundcolor","tasks","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header';\nimport AuthForm from './components/AuthForm';\nimport Sidebar from './components/Sidebar';\nimport './index.css';\nimport { DataContext } from './contexts/DataContext';\nimport { UserContext } from './contexts/UserContext';\nimport { AppContainer, CenteredContainer, ContentContainer, DashboardContainer } from './styles/Container.styled';\nimport Dashboard from './components/Dashboard';\nimport Profile from './components/Profile';\n\n// App component responsible for rendering the application interface\nconst App = () => {\n  // Accessing user data from UserContext\n  const { user } = useContext(UserContext);\n  // State variables to manage selected list, sidebar visibility, and profile visibility\n  const [selectedList, setSelectedList] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n\n  // Accessing lists and sharedLists data along with their respective functions from DataContext\n  const { lists, sharedLists, getLists, getSharedLists } = useContext(DataContext);\n  \n  // Merging lists and sharedLists into a single array\n  const allLists = [...(lists || []), ...(sharedLists || [])];\n\n  // Effect to update the selectedList when lists or sharedLists change\n  useEffect(() => {\n    if (allLists && selectedList) {\n      const updatedSelectedList = allLists.find(list => list.id === selectedList.id);\n      console.log('updating selected list');\n      setSelectedList(updatedSelectedList);\n      if (!updatedSelectedList) {\n        setSelectedList(null);\n      }\n    }\n  }, [lists, selectedList, sharedLists]);\n\n  // Effect to log the status of openProfile\n  useEffect(() => {\n    console.log('open profile', openProfile);\n  }, [openProfile]);\n\n  return (\n    <>\n      {/* Render authentication form if user is not authenticated */}\n      {!user && \n      <CenteredContainer>\n        <AuthForm />\n      </CenteredContainer>\n      }\n      {/* Render main app components if user is authenticated */}\n      {user && (\n        <AppContainer>\n          {/* Render sidebar, header, task list, dashboard, or profile based on selectedList and openProfile */}\n          <Sidebar selectedList={selectedList} setSelectedList={setSelectedList} isOpen={isOpen} setIsOpen={setIsOpen} openProfile={openProfile} setOpenProfile={setOpenProfile}/>\n          <ContentContainer backgroundcolor={selectedList ? '#fff' : '#f2f2f2'}>\n            <Header setSelectedList={setSelectedList} isOpen={isOpen} setIsOpen={setIsOpen} setOpenProfile={setOpenProfile}/>\n            {selectedList && (\n              <TaskList key={selectedList.id} list={selectedList} tasks={selectedList.tasks} setSelectedList={setSelectedList} />\n            )}\n            {!selectedList && !openProfile && (\n              <DashboardContainer>\n                <Dashboard setSelectedList={setSelectedList}/>\n              </DashboardContainer>\n            )}\n            {openProfile && (\n              <Profile />\n            )}\n          </ContentContainer>\n        </AppContainer>\n      )}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}