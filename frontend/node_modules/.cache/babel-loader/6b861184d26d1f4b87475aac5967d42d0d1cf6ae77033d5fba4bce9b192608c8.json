{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TaskModal from './TaskModal';\nimport ListModal from './ListModal';\nimport ShareListModal from './ShareListModal';\nimport { useState, useEffect } from 'react';\nimport TaskListItem from './TaskListItem';\nimport { UserContext } from '../contexts/UserContext';\nimport { useContext } from 'react';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\n\n// TaskList displays all of the tasks in a given list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  list,\n  tasks\n}) => {\n  _s();\n  const [showTaskModal, setShowTaskModal] = useState(false); // controls the state of the task modal object\n  const [showListModal, setShowListModal] = useState(false); // controls the state of the list modal object\n  const [showShareListModal, setShowShareListModal] = useState(false); // controls the state of the list modal object\n  const {\n    user\n  } = useContext(UserContext);\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n  const fetchUserData = async () => {\n    const db = getFirestore();\n    try {\n      const userDocRef = doc(db, 'users', list.owner_id);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        setOwnerData({\n          email: userData.email,\n          name: userData.name\n        });\n      } else {\n        console.error('User document does not exist');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Created by \", ownerData.name, \" - \", ownerData.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [list.owner_id === user.iud && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: () => setShowShareListModal(true),\n          children: \"SHARE LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: () => setShowListModal(true),\n          children: \"EDIT LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create\",\n        onClick: () => setShowTaskModal(true),\n        children: \"ADD NEW TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), tasks === null || tasks === void 0 ? void 0 : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }, this)), showTaskModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n      mode: 'create',\n      setShowModal: setShowTaskModal,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this), showListModal && /*#__PURE__*/_jsxDEV(ListModal, {\n      mode: 'edit',\n      setShowModal: setShowListModal,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this), showShareListModal && /*#__PURE__*/_jsxDEV(ShareListModal, {\n      setShowModal: setShowShareListModal,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"n7d6A0/SiQLtBqcY+EU0Y/AlZhY=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskModal","ListModal","ShareListModal","useState","useEffect","TaskListItem","UserContext","useContext","getFirestore","doc","getDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","list","tasks","_s","showTaskModal","setShowTaskModal","showListModal","setShowListModal","showShareListModal","setShowShareListModal","user","ownerData","setOwnerData","email","name","fetchUserData","db","userDocRef","owner_id","userDocSnapshot","exists","userData","data","console","error","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","iud","onClick","map","task","id","mode","setShowModal","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\nimport TaskModal from './TaskModal';\nimport ListModal from './ListModal';\nimport ShareListModal from './ShareListModal';\nimport { useState, useEffect } from 'react';\nimport TaskListItem from './TaskListItem';\nimport { UserContext } from '../contexts/UserContext';\nimport { useContext } from 'react';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\n\n// TaskList displays all of the tasks in a given list\nconst TaskList = ({ list, tasks }) => {\n  const [showTaskModal, setShowTaskModal] = useState(false); // controls the state of the task modal object\n  const [showListModal, setShowListModal] = useState(false); // controls the state of the list modal object\n  const [showShareListModal, setShowShareListModal] = useState(false); // controls the state of the list modal object\n  const { user } = useContext(UserContext);\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n\n  const fetchUserData = async () => {\n    const db = getFirestore();\n\n    try {\n      const userDocRef = doc(db, 'users', list.owner_id);\n      const userDocSnapshot = await getDoc(userDocRef);\n      \n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        setOwnerData({\n          email: userData.email,\n          name: userData.name\n        });\n      } else {\n        console.error('User document does not exist');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, [list]);\n\n  return (\n    <div className=\"\">\n        <h1>{ list.title }</h1>\n        <h2>Created by {ownerData.name} - {ownerData.email}</h2>\n        <div className=\"button-container\">\n            {(list.owner_id === user.iud) && \n              <>\n                <button className=\"edit\" onClick={() => setShowShareListModal(true)}>SHARE LIST</button>\n                <button className=\"edit\" onClick={() => setShowListModal(true)}>EDIT LIST</button>\n              </>\n            }\n            <button className=\"create\" onClick={() => setShowTaskModal(true)}>ADD NEW TASK</button>\n        </div>\n        {tasks?.map((task) => <TaskListItem key={task.id} task={task} />)}\n        {showTaskModal && <TaskModal mode={'create'} setShowModal={setShowTaskModal} list={list} />}\n        {showListModal && <ListModal mode={'edit'} setShowModal={setShowListModal} list={list} />}\n        {showShareListModal && <ShareListModal setShowModal={setShowShareListModal} list={list} />}\n    </div>\n  );\n}\n\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrE,MAAM;IAAEsB;EAAK,CAAC,GAAGlB,UAAU,CAACD,WAAW,CAAC;EACxC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC;IACzCyB,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,EAAE,GAAGvB,YAAY,CAAC,CAAC;IAEzB,IAAI;MACF,MAAMwB,UAAU,GAAGvB,GAAG,CAACsB,EAAE,EAAE,OAAO,EAAEf,IAAI,CAACiB,QAAQ,CAAC;MAClD,MAAMC,eAAe,GAAG,MAAMxB,MAAM,CAACsB,UAAU,CAAC;MAEhD,IAAIE,eAAe,CAACC,MAAM,CAAC,CAAC,EAAE;QAC5B,MAAMC,QAAQ,GAAGF,eAAe,CAACG,IAAI,CAAC,CAAC;QACvCV,YAAY,CAAC;UACXC,KAAK,EAAEQ,QAAQ,CAACR,KAAK;UACrBC,IAAI,EAAEO,QAAQ,CAACP;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLS,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACd0B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IAAK4B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACb7B,OAAA;MAAA6B,QAAA,EAAMzB,IAAI,CAAC0B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBlC,OAAA;MAAA6B,QAAA,GAAI,aAAW,EAACf,SAAS,CAACG,IAAI,EAAC,KAAG,EAACH,SAAS,CAACE,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDlC,OAAA;MAAK4B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAC3BzB,IAAI,CAACiB,QAAQ,KAAKR,IAAI,CAACsB,GAAG,iBAC1BnC,OAAA,CAAAE,SAAA;QAAA2B,QAAA,gBACE7B,OAAA;UAAQ4B,SAAS,EAAC,MAAM;UAACQ,OAAO,EAAEA,CAAA,KAAMxB,qBAAqB,CAAC,IAAI,CAAE;UAAAiB,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxFlC,OAAA;UAAQ4B,SAAS,EAAC,MAAM;UAACQ,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAAC,IAAI,CAAE;UAAAmB,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAClF,CAAC,eAELlC,OAAA;QAAQ4B,SAAS,EAAC,QAAQ;QAACQ,OAAO,EAAEA,CAAA,KAAM5B,gBAAgB,CAAC,IAAI,CAAE;QAAAqB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,EACL7B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgC,GAAG,CAAEC,IAAI,iBAAKtC,OAAA,CAACP,YAAY;MAAe6C,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC,EAChE3B,aAAa,iBAAIP,OAAA,CAACZ,SAAS;MAACoD,IAAI,EAAE,QAAS;MAACC,YAAY,EAAEjC,gBAAiB;MAACJ,IAAI,EAAEA;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1FzB,aAAa,iBAAIT,OAAA,CAACX,SAAS;MAACmD,IAAI,EAAE,MAAO;MAACC,YAAY,EAAE/B,gBAAiB;MAACN,IAAI,EAAEA;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxFvB,kBAAkB,iBAAIX,OAAA,CAACV,cAAc;MAACmD,YAAY,EAAE7B,qBAAsB;MAACR,IAAI,EAAEA;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAtDKH,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}