{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TaskModal from './TaskModal';\nimport ListModal from './ListModal';\nimport ShareList from './ShareList';\nimport ShareListModal from './ShareListModal';\nimport { useState, useEffect } from 'react';\nimport TaskListItem from './TaskListItem';\nimport { UserContext } from '../contexts/UserContext';\nimport { DataContext } from '../contexts/DataContext';\nimport { useContext } from 'react';\nimport { ListTitle, TaskListContainer, ListDetails, TitleContainer, HeaderContainer, ListTitleContainer, EditListButton, TasksContainer } from '../styles/TaskList.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport AddTask from './AddTask';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(REACT_APP_SERVERURL);\n\n// TaskList displays all of the tasks in a given list\nconst TaskList = ({\n  list,\n  tasks,\n  setSelectedList\n}) => {\n  _s();\n  const [showTaskModal, setShowTaskModal] = useState(false); // controls the state of the task modal object\n  const [showListModal, setShowListModal] = useState(false); // controls the state of the list modal object\n  const {\n    user\n  } = useContext(UserContext);\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n  const {\n    getLists,\n    getSharedLists\n  } = useContext(DataContext);\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${list.owner_id}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setOwnerData({\n          email: userData.email,\n          name: userData.name\n        });\n      } else {\n        console.error('Error fetching user data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n    // Join list upon component mount\n    socket.emit('joinList', list.id);\n\n    // Leave the list upon component unmount\n    return () => {\n      socket.emit('leaveList', list.id);\n    };\n  }, [list]);\n  useEffect(() => {\n    socket.on('listUpdated', () => {\n      console.log('This list has been updated');\n      // update state, perform actions here\n      if (user.uid === list.owner_id) {\n        getLists();\n      } else {\n        getSharedLists();\n      }\n    });\n    socket.on('listDeleted', () => {\n      console.log('This list has been deleted');\n      // update state, perform actions here\n      setSelectedList(null);\n      if (user.uid === list.owner_id) {\n        getLists();\n      } else {\n        getSharedLists();\n      }\n    });\n\n    // Clean up event listener\n    return () => {\n      socket.off('listUpdated');\n      socket.off('listDeleted');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TaskListContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ListTitleContainer, {\n          children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n            color: list.color,\n            children: [list.title, \" (\", tasks.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), list.owner_id === user.uid && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(EditListButton, {\n              className: \"edit\",\n              onClick: () => setShowListModal(true),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPenToSquare\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 89\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListDetails, {\n          children: [\"Created by\", list.owner_id === user.uid ? ' Me ' : ` ${ownerData.name} `, \"(\", ownerData.email, \") on \", new Date(list.date).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShareList, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TasksContainer, {\n      children: [tasks === null || tasks === void 0 ? void 0 : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n        list: list,\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }, this)), showTaskModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n        mode: 'create',\n        setShowModal: setShowTaskModal,\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this), showListModal && /*#__PURE__*/_jsxDEV(ListModal, {\n        mode: 'edit',\n        setShowModal: setShowListModal,\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"ifPGRp8tHXQMjpHlgApSAw85sjI=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskModal","ListModal","ShareList","ShareListModal","useState","useEffect","TaskListItem","UserContext","DataContext","useContext","ListTitle","TaskListContainer","ListDetails","TitleContainer","HeaderContainer","ListTitleContainer","EditListButton","TasksContainer","FontAwesomeIcon","faPenToSquare","AddTask","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","REACT_APP_SERVERURL","TaskList","list","tasks","setSelectedList","_s","showTaskModal","setShowTaskModal","showListModal","setShowListModal","user","ownerData","setOwnerData","email","name","getLists","getSharedLists","fetchUserData","response","fetch","process","env","owner_id","ok","userData","json","console","error","statusText","emit","id","on","log","uid","off","children","color","title","length","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","icon","Date","date","toLocaleDateString","year","month","day","map","task","mode","setShowModal","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\nimport TaskModal from './TaskModal';\nimport ListModal from './ListModal';\nimport ShareList from './ShareList';\nimport ShareListModal from './ShareListModal';\nimport { useState, useEffect } from 'react';\nimport TaskListItem from './TaskListItem';\nimport { UserContext } from '../contexts/UserContext';\nimport { DataContext } from '../contexts/DataContext';\nimport { useContext } from 'react';\nimport { ListTitle, TaskListContainer, ListDetails, TitleContainer, HeaderContainer, ListTitleContainer, EditListButton, TasksContainer } from '../styles/TaskList.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport AddTask from './AddTask';\nimport io from 'socket.io-client';\n\nconst socket = io(REACT_APP_SERVERURL);\n\n// TaskList displays all of the tasks in a given list\nconst TaskList = ({ list, tasks, setSelectedList }) => {\n  const [showTaskModal, setShowTaskModal] = useState(false); // controls the state of the task modal object\n  const [showListModal, setShowListModal] = useState(false); // controls the state of the list modal object\n  const { user } = useContext(UserContext);\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n  const { getLists, getSharedLists } = useContext(DataContext);\n\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${list.owner_id}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setOwnerData({ \n          email: userData.email, \n          name: userData.name \n        });\n      } else {\n        console.error('Error fetching user data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n    // Join list upon component mount\n    socket.emit('joinList', list.id);\n\n    // Leave the list upon component unmount\n    return () => {\n      socket.emit('leaveList', list.id);\n    };\n  }, [list]);\n\n  useEffect(() => {\n    socket.on('listUpdated', () => {\n      console.log('This list has been updated');\n      // update state, perform actions here\n      if (user.uid === list.owner_id) {\n        getLists();\n      } else {\n        getSharedLists();\n      }\n    });\n\n    socket.on('listDeleted', () => {\n      console.log('This list has been deleted');\n      // update state, perform actions here\n      setSelectedList(null);\n      if (user.uid === list.owner_id) {\n        getLists();\n      } else {\n        getSharedLists();\n      }\n    });\n\n    // Clean up event listener\n    return () => {\n      socket.off('listUpdated');\n      socket.off('listDeleted');\n    };\n  }, []);\n\n  return (\n    <TaskListContainer>\n      <HeaderContainer>\n        <TitleContainer>\n          <ListTitleContainer>\n            <ListTitle color={list.color}>{ list.title } ({tasks.length})</ListTitle>\n            {(list.owner_id === user.uid) && \n              <>\n                <EditListButton className=\"edit\" onClick={() => setShowListModal(true)}><FontAwesomeIcon icon={faPenToSquare} /></EditListButton>\n              </>\n            }\n          </ListTitleContainer>\n            <ListDetails>Created by \n              {list.owner_id === user.uid ? ' Me ' : ` ${ownerData.name} `} \n              ({ownerData.email}) on {new Date(list.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</ListDetails>\n        </TitleContainer>\n        <ShareList list={list}/>\n      </HeaderContainer>\n        <AddTask list={list}/>\n        <TasksContainer>\n          {tasks?.map((task) => <TaskListItem key={task.id} list={list} task={task} />)}\n          {showTaskModal && <TaskModal mode={'create'} setShowModal={setShowTaskModal} list={list} />}\n          {showListModal && <ListModal mode={'edit'} setShowModal={setShowListModal} list={list} />}\n        </TasksContainer>\n    </TaskListContainer>\n  );\n}\n\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,cAAc,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,2BAA2B;AAC1K,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,MAAM,GAAGL,EAAE,CAACM,mBAAmB,CAAC;;AAEtC;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM;IAAEiC;EAAK,CAAC,GAAG5B,UAAU,CAACF,WAAW,CAAC;EACxC,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC;IACzCoC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAGlC,UAAU,CAACD,WAAW,CAAC;EAE5D,MAAMoC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACrB,mBAAoB,UAASE,IAAI,CAACoB,QAAS,EAAC,CAAC;MACzF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACtCb,YAAY,CAAC;UACXC,KAAK,EAAEW,QAAQ,CAACX,KAAK;UACrBC,IAAI,EAAEU,QAAQ,CAACV;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLY,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACU,UAAU,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACduC,aAAa,CAAC,CAAC;IACf;IACAlB,MAAM,CAAC8B,IAAI,CAAC,UAAU,EAAE3B,IAAI,CAAC4B,EAAE,CAAC;;IAEhC;IACA,OAAO,MAAM;MACX/B,MAAM,CAAC8B,IAAI,CAAC,WAAW,EAAE3B,IAAI,CAAC4B,EAAE,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,CAAC5B,IAAI,CAAC,CAAC;EAEVxB,SAAS,CAAC,MAAM;IACdqB,MAAM,CAACgC,EAAE,CAAC,aAAa,EAAE,MAAM;MAC7BL,OAAO,CAACM,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACA,IAAItB,IAAI,CAACuB,GAAG,KAAK/B,IAAI,CAACoB,QAAQ,EAAE;QAC9BP,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACLC,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;IAEFjB,MAAM,CAACgC,EAAE,CAAC,aAAa,EAAE,MAAM;MAC7BL,OAAO,CAACM,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACA5B,eAAe,CAAC,IAAI,CAAC;MACrB,IAAIM,IAAI,CAACuB,GAAG,KAAK/B,IAAI,CAACoB,QAAQ,EAAE;QAC9BP,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACLC,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXjB,MAAM,CAACmC,GAAG,CAAC,aAAa,CAAC;MACzBnC,MAAM,CAACmC,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtC,OAAA,CAACZ,iBAAiB;IAAAmD,QAAA,gBAChBvC,OAAA,CAACT,eAAe;MAAAgD,QAAA,gBACdvC,OAAA,CAACV,cAAc;QAAAiD,QAAA,gBACbvC,OAAA,CAACR,kBAAkB;UAAA+C,QAAA,gBACjBvC,OAAA,CAACb,SAAS;YAACqD,KAAK,EAAElC,IAAI,CAACkC,KAAM;YAAAD,QAAA,GAAGjC,IAAI,CAACmC,KAAK,EAAE,IAAE,EAAClC,KAAK,CAACmC,MAAM,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,EACvExC,IAAI,CAACoB,QAAQ,KAAKZ,IAAI,CAACuB,GAAG,iBAC1BrC,OAAA,CAAAE,SAAA;YAAAqC,QAAA,eACEvC,OAAA,CAACP,cAAc;cAACsD,SAAS,EAAC,MAAM;cAACC,OAAO,EAAEA,CAAA,KAAMnC,gBAAgB,CAAC,IAAI,CAAE;cAAA0B,QAAA,eAACvC,OAAA,CAACL,eAAe;gBAACsD,IAAI,EAAErD;cAAc;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB;UAAC,gBACjI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEa,CAAC,eACnB9C,OAAA,CAACX,WAAW;UAAAkD,QAAA,GAAC,YACX,EAACjC,IAAI,CAACoB,QAAQ,KAAKZ,IAAI,CAACuB,GAAG,GAAG,MAAM,GAAI,IAAGtB,SAAS,CAACG,IAAK,GAAE,EAAC,GAC5D,EAACH,SAAS,CAACE,KAAK,EAAC,OAAK,EAAC,IAAIiC,IAAI,CAAC5C,IAAI,CAAC6C,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAU,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChI,CAAC,eACjB9C,OAAA,CAACrB,SAAS;QAAC2B,IAAI,EAAEA;MAAK;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAChB9C,OAAA,CAACH,OAAO;MAACS,IAAI,EAAEA;IAAK;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtB9C,OAAA,CAACN,cAAc;MAAA6C,QAAA,GACZhC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiD,GAAG,CAAEC,IAAI,iBAAKzD,OAAA,CAACjB,YAAY;QAAeuB,IAAI,EAAEA,IAAK;QAACmD,IAAI,EAAEA;MAAK,GAAhCA,IAAI,CAACvB,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAAC,CAAC,EAC5EpC,aAAa,iBAAIV,OAAA,CAACvB,SAAS;QAACiF,IAAI,EAAE,QAAS;QAACC,YAAY,EAAEhD,gBAAiB;QAACL,IAAI,EAAEA;MAAK;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1FlC,aAAa,iBAAIZ,OAAA,CAACtB,SAAS;QAACgF,IAAI,EAAE,MAAO;QAACC,YAAY,EAAE9C,gBAAiB;QAACP,IAAI,EAAEA;MAAK;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAExB,CAAC;AAAArC,EAAA,CA7FKJ,QAAQ;AAAAuD,EAAA,GAARvD,QAAQ;AA+Fd,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}