{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport ListModal from './ListModal';\nimport { useState } from 'react';\nimport { DataContext } from '../contexts/DataContext';\nimport { SidebarContainer, SidebarListsContainer, ListButton, Header, AddListButton, ToggleButton, ToggleButtonContainer } from '../styles/Sidebar.styled.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  selectedList,\n  setSelectedList,\n  isOpen,\n  setIsOpen,\n  setOpenProfile,\n  openProfile\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false); // controls the state of the modal object\n  const {\n    lists,\n    sharedLists\n  } = useContext(DataContext);\n  const toggleSidebar = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarContainer, {\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ToggleButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n          onClick: toggleSidebar,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddListButton, {\n        onClick: () => {\n          setShowModal(true);\n          setIsOpen(!isOpen);\n        },\n        children: \"Create List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SidebarListsContainer, {\n        children: /*#__PURE__*/_jsxDEV(ListButton, {\n          onClick: () => {\n            setSelectedList(null);\n            setIsOpen(!isOpen);\n            setOpenProfile(false);\n          },\n          isSelected: !selectedList && !openProfile,\n          color: \"#2d7dfc\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), lists && lists.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Your Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SidebarListsContainer, {\n          children: lists.map(list => /*#__PURE__*/_jsxDEV(ListButton, {\n            onClick: () => {\n              setSelectedList(list);\n              setIsOpen(!isOpen);\n            },\n            isSelected: selectedList && list.id === selectedList.id,\n            color: list.color,\n            children: list.title\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), sharedLists && sharedLists.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Shared With Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SidebarListsContainer, {\n          children: sharedLists.map(sharedList => /*#__PURE__*/_jsxDEV(ListButton, {\n            onClick: () => {\n              setSelectedList(sharedList);\n              setIsOpen(!isOpen);\n            },\n            isSelected: selectedList && sharedList.id === selectedList.id,\n            color: sharedList.color,\n            children: sharedList.title\n          }, sharedList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ListModal, {\n      mode: \"create\",\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(Sidebar, \"blMQuyoieI33WPPi17UKS4+inKs=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","UserContext","ListModal","useState","DataContext","SidebarContainer","SidebarListsContainer","ListButton","Header","AddListButton","ToggleButton","ToggleButtonContainer","FontAwesomeIcon","faXmark","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","selectedList","setSelectedList","isOpen","setIsOpen","setOpenProfile","openProfile","_s","showModal","setShowModal","lists","sharedLists","toggleSidebar","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","isSelected","color","length","map","list","id","title","sharedList","mode","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport ListModal from './ListModal';\nimport { useState } from 'react';\nimport { DataContext } from '../contexts/DataContext';\nimport { SidebarContainer, SidebarListsContainer, ListButton, Header, AddListButton, ToggleButton, ToggleButtonContainer } from '../styles/Sidebar.styled.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'; \n\nconst Sidebar = ({ selectedList, setSelectedList, isOpen, setIsOpen, setOpenProfile, openProfile }) => {\n    const [showModal, setShowModal] = useState(false) // controls the state of the modal object\n    const { lists, sharedLists } = useContext(DataContext);\n\n    const toggleSidebar = () => {\n        setIsOpen(!isOpen);\n    }\n    \n  return (\n    <>\n    <SidebarContainer isOpen={isOpen}>\n        <ToggleButtonContainer>\n            <ToggleButton onClick={toggleSidebar}>\n                <FontAwesomeIcon icon={faXmark} />\n            </ToggleButton>\n        </ToggleButtonContainer>\n        <AddListButton onClick={() => {\n            setShowModal(true);\n            setIsOpen(!isOpen);\n        }}>\n            Create List\n        </AddListButton>\n\n        <SidebarListsContainer>\n            <ListButton \n                onClick={() => {\n                    setSelectedList(null);\n                    setIsOpen(!isOpen);\n                    setOpenProfile(false);\n                }}\n                isSelected={!selectedList && !openProfile}\n                color='#2d7dfc'\n                >\n                    Dashboard\n            </ListButton>\n        </SidebarListsContainer>\n\n        {lists && lists.length > 0 && (\n            <>\n                <Header>Your Lists</Header>\n                <SidebarListsContainer>\n                    {lists.map((list) => \n                        <ListButton\n                            key={list.id} \n                            onClick={() => {\n                                setSelectedList(list);\n                                setIsOpen(!isOpen);\n                            }}\n                            isSelected={selectedList && list.id === selectedList.id}\n                            color={list.color}\n                        >\n                            { list.title }\n                    </ListButton>\n                )}\n                </SidebarListsContainer>\n            </>\n        )}\n\n        {sharedLists && sharedLists.length > 0 && (\n            <>\n                <Header>Shared With Me</Header>\n                <SidebarListsContainer>\n                    {sharedLists.map((sharedList) => \n                        <ListButton\n                            key={sharedList.id} \n                            onClick={() => {\n                                setSelectedList(sharedList);\n                                setIsOpen(!isOpen);\n                            }}\n                            isSelected={selectedList && sharedList.id === selectedList.id}\n                            color={sharedList.color}\n                        >\n                            { sharedList.title }\n                    </ListButton>\n                )}\n                </SidebarListsContainer>\n            </>\n        )}\n    </SidebarContainer>\n    {showModal && <ListModal mode='create' setShowModal={setShowModal} />}\n    </>\n  );\n}\n\nexport default Sidebar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}