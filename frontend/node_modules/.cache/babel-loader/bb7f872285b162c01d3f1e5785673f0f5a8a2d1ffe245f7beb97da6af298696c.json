{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/ListContainer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport TickBox from './TickBox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRightLong } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { UserContext } from '../contexts/UserContext';\nimport { Container, TitleContainer, Title, Button, ListInfoContainer, ListInfo, TaskList, TaskItem } from '../styles/ListContainer.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = ({\n  list,\n  setSelectedList\n}) => {\n  _s();\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n  const {\n    user\n  } = useContext(UserContext);\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${list.owner_id}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setOwnerData({\n          email: userData.email,\n          name: userData.name\n        });\n      } else {\n        console.error('Error fetching user data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    color: list.color,\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      color: list.color,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setSelectedList(list),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowRightLong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), ownerData.email && ownerData.name && list.date && /*#__PURE__*/_jsxDEV(ListInfoContainer, {\n      children: [ownerData.email === user.email ? /*#__PURE__*/_jsxDEV(ListInfo, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), \"Me\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ListInfo, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), ownerData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListInfo, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCalendar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), new Date(list.date).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      children: list.tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        children: [/*#__PURE__*/_jsxDEV(TickBox, {\n          list: list,\n          task: task,\n          margin: '0px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), task.title]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ListContainer, \"sQffUfpQFG4HrhU2uF5raXETvz0=\");\n_c = ListContainer;\nexport default ListContainer;\nvar _c;\n$RefreshReg$(_c, \"ListContainer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","TickBox","FontAwesomeIcon","faArrowRightLong","faUser","faCalendar","UserContext","Container","TitleContainer","Title","Button","ListInfoContainer","ListInfo","TaskList","TaskItem","jsxDEV","_jsxDEV","ListContainer","list","setSelectedList","_s","ownerData","setOwnerData","email","name","user","fetchUserData","response","fetch","process","env","REACT_APP_SERVERURL","owner_id","ok","userData","json","console","error","statusText","color","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","date","Date","toLocaleDateString","year","month","day","tasks","map","task","margin","id","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/ListContainer.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport TickBox from './TickBox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRightLong } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { UserContext } from '../contexts/UserContext';\nimport { Container, TitleContainer, Title, Button, ListInfoContainer, ListInfo, TaskList, TaskItem } from '../styles/ListContainer.styled';\n\nconst ListContainer = ({ list, setSelectedList }) => {\n    const [ownerData, setOwnerData] = useState({\n        email: null,\n        name: null\n      });\n    const { user } = useContext(UserContext);\n\n    const fetchUserData = async () => {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${list.owner_id}`);\n          if (response.ok) {\n            const userData = await response.json();\n            setOwnerData({ \n              email: userData.email, \n              name: userData.name \n            });\n          } else {\n            console.error('Error fetching user data:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      };\n    \n      useEffect(() => {\n        fetchUserData();\n      }, [list]);\n\n    return (\n        <Container color={list.color}>\n            <TitleContainer color={list.color}>\n                <Title>{list.title}</Title>\n                <Button onClick={() => setSelectedList(list)}><FontAwesomeIcon icon={faArrowRightLong} /></Button>\n            </TitleContainer>\n            {ownerData.email && ownerData.name && list.date && (\n                <ListInfoContainer>\n                {ownerData.email === user.email ? (\n                    <ListInfo>\n                        <FontAwesomeIcon icon={faUser} />\n                        Me\n                    </ListInfo>\n                ) : (\n                    <ListInfo>\n                        <FontAwesomeIcon icon={faUser} />\n                        {ownerData.email}\n                    </ListInfo>\n                )}\n                    <ListInfo>\n                        <FontAwesomeIcon icon={faCalendar} />\n                        {new Date(list.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}\n                    </ListInfo>\n                </ListInfoContainer>\n            )}\n            <TaskList>\n                {list.tasks.map(task => (\n                    <TaskItem key={task.id}>\n                        <TickBox list={list} task={task} margin={'0px'}/>\n                        {task.title}\n                    </TaskItem>\n                ))}\n            </TaskList>\n        </Container>\n    );\n}\n\nexport default ListContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}