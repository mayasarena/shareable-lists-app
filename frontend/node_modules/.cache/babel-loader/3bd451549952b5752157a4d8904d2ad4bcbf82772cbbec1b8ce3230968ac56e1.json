{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/AddTask.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { DataContext } from '../contexts/DataContext';\nimport { UserContext } from '../contexts/UserContext';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskModal = ({\n  setShowModal,\n  list\n}) => {\n  _s();\n  const {\n    getLists,\n    getSharedLists\n  } = useContext(DataContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const [taskData, setTaskData] = useState({\n    list_id: list.id,\n    title: '',\n    completed: false,\n    creator_id: user.uid,\n    last_edited_by: null\n  });\n  const postTaskData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create task');\n      }\n      const newTask = await response.json();\n      console.log('New task created:', newTask);\n      setShowModal(false);\n      getLists();\n      getSharedLists();\n    } catch (error) {\n      console.error('Error creating task:', error.message);\n      throw error;\n    }\n  };\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setTaskData(taskData => ({\n      ...taskData,\n      title: value\n    }));\n    console.log(taskData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      maxLength: 30,\n      placeholder: \"Task goes here\",\n      name: \"title\",\n      value: taskData.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faPlus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: postTaskData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskModal, \"DScJpIQd1bdFw2rSi5VBPnZ/XIQ=\");\n_c = TaskModal;\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","useContext","useCookies","DataContext","UserContext","faPlus","jsxDEV","_jsxDEV","TaskModal","setShowModal","list","_s","getLists","getSharedLists","user","taskData","setTaskData","list_id","id","title","completed","creator_id","uid","last_edited_by","postTaskData","e","preventDefault","response","fetch","process","env","REACT_APP_SERVERURL","method","headers","body","JSON","stringify","ok","Error","newTask","json","console","log","error","message","handleChange","value","target","children","required","maxLength","placeholder","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","FontAwesomeIcon","icon","type","onClick","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/AddTask.js"],"sourcesContent":["import React from 'react';\nimport { useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { DataContext } from '../contexts/DataContext';\nimport { UserContext } from '../contexts/UserContext';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst TaskModal = ({ setShowModal, list }) => {\n    const { getLists, getSharedLists } = useContext(DataContext);\n    const { user } = useContext(UserContext);\n\n    const [taskData, setTaskData] = useState({\n        list_id: list.id,\n        title: '',\n        completed: false,\n        creator_id: user.uid,\n        last_edited_by: null\n    });\n\n    const postTaskData = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/tasks`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(taskData)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to create task');\n            }\n\n            const newTask = await response.json();\n            console.log('New task created:', newTask);\n            setShowModal(false);\n            getLists();\n            getSharedLists();\n        } catch(error) {\n            console.error('Error creating task:', error.message);\n            throw error;\n        }\n    };\n\n    const handleChange = (e) => {\n        const { value } = e.target\n\n        setTaskData(taskData => ({\n            ...taskData,\n            title: value\n        }))\n        console.log(taskData)\n    }\n\n    return (\n        <form>\n            <input \n                required \n                maxLength={30} \n                placeholder=\"Task goes here\" \n                name=\"title\"\n                value={taskData.title} \n                onChange={handleChange}\n            />\n            <br />\n            <FontAwesomeIcon icon={faPlus} /> \n            <input type=\"submit\" onClick={postTaskData}/>\n        </form>\n\n    );\n}\n\nexport default TaskModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}