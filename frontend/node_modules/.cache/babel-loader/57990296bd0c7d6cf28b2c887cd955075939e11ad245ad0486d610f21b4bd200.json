{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ShareListModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useContext, useEffect } from 'react';\nimport { DataContext } from '../contexts/DataContext';\n\n// The modal sharing a list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareListModal = ({\n  setShowModal,\n  list\n}) => {\n  _s();\n  const {\n    getData\n  } = useContext(DataContext);\n  const [error, setError] = useState('');\n  const [sharedUserEmail, setSharedUserEmail] = useState('');\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    if (userId !== null) {\n      shareList();\n    }\n  }, [userId]);\n  const shareList = async e => {\n    e.preventDefault();\n    try {\n      console.log('user id in share', userId);\n      const sharedListResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/shared_lists`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          list_id: list.id,\n          user_id: userId\n        })\n      });\n      if (!sharedListResponse.ok) {\n        throw new Error('Failed to add shared list');\n      }\n      const listResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}/shared`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          shared: true\n        })\n      });\n      if (!listResponse.ok) {\n        throw new Error('Failed to update list');\n      }\n      console.log('Shared list added successfully');\n      setUserId(null);\n      setShowModal(false);\n      getData();\n    } catch (error) {\n      console.error('Error sharing list:', error);\n      setError(`Error sharing list: {error}`);\n    }\n  };\n  const fetchUserFromEmail = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/email/${sharedUserEmail}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setUserId(userData.id);\n      } else {\n        console.error('Error fetching user:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setSharedUserEmail(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Share your list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"email\",\n          placeholder: \"share with (email)\",\n          name: \"email\",\n          value: sharedUserEmail,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: fetchUserFromEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(ShareListModal, \"aNmNsa80YTt9mnzGHv4XiYKJWG0=\");\n_c = ShareListModal;\nexport default ShareListModal;\nvar _c;\n$RefreshReg$(_c, \"ShareListModal\");","map":{"version":3,"names":["React","useState","useContext","useEffect","DataContext","jsxDEV","_jsxDEV","ShareListModal","setShowModal","list","_s","getData","error","setError","sharedUserEmail","setSharedUserEmail","userId","setUserId","shareList","e","preventDefault","console","log","sharedListResponse","fetch","process","env","REACT_APP_SERVERURL","method","headers","body","JSON","stringify","list_id","id","user_id","ok","Error","listResponse","shared","fetchUserFromEmail","response","userData","json","statusText","handleChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","required","type","placeholder","name","onChange","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ShareListModal.js"],"sourcesContent":["import React from 'react';\nimport { useState, useContext, useEffect } from 'react';\nimport { DataContext } from '../contexts/DataContext';\n\n// The modal sharing a list\nconst ShareListModal = ({ setShowModal, list }) => {\n    const { getData } = useContext(DataContext);\n    const [error, setError] = useState('');\n\n    const [sharedUserEmail, setSharedUserEmail] = useState('')\n    const [userId, setUserId] = useState(null)\n\n    useEffect(() => {\n        if (userId !== null) {\n            shareList();\n        }\n    }, [userId]);\n\n    const shareList = async (e) => {\n        e.preventDefault();\n        try {\n            console.log('user id in share', userId);\n            const sharedListResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/shared_lists`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    list_id: list.id,\n                    user_id: userId\n                })\n            });\n            if (!sharedListResponse.ok) {\n                throw new Error('Failed to add shared list');\n            } \n\n            const listResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}/shared`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ shared: true })\n            });\n\n            if (!listResponse.ok) {\n                throw new Error('Failed to update list');\n            }\n\n            console.log('Shared list added successfully');\n            setUserId(null);\n            setShowModal(false);\n            getData();\n\n        } catch (error) {\n            console.error('Error sharing list:', error);\n            setError(`Error sharing list: {error}`);\n        }\n    };\n\n    const fetchUserFromEmail = async () => {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/email/${sharedUserEmail}`);\n          if (response.ok) {\n            const userData = await response.json();\n            setUserId(userData.id);\n          } else {\n            console.error('Error fetching user:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error fetching user:', error);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { value } = e.target\n        setSharedUserEmail(value);\n    };\n\n    return (\n        <div className=\"overlay\">\n            <div className=\"modal\">\n                <div className=\"form-title-container\">\n                    <h3>Share your list</h3>\n                    <button onClick={() => setShowModal(false)}>X</button>\n                </div>\n\n                <form>\n                    <input \n                        required \n                        type=\"email\"\n                        placeholder=\"share with (email)\" \n                        name=\"email\"\n                        value={sharedUserEmail} \n                        onChange={handleChange}\n                    />\n                    <br />\n                    {error && <p className=\"error\">{error}</p>}\n                    <input type=\"submit\" onClick={fetchUserFromEmail}/>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ShareListModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}