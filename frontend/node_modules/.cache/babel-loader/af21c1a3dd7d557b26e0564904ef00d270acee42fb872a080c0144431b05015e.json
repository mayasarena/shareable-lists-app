{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header';\nimport AuthForm from './components/AuthForm';\nimport './index.css';\nimport { DataContext } from './contexts/DataContext';\nimport { UserContext } from './contexts/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    lists,\n    sharedLists\n  } = useContext(DataContext);\n  const {\n    user\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!user && /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), lists && lists.length > 0 ? lists.map(list => /*#__PURE__*/_jsxDEV(TaskList, {\n        list: list,\n        tasks: list.tasks\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No lists!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lists shared with you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), lists && lists.length > 0 ? lists.map(list => /*#__PURE__*/_jsxDEV(TaskList, {\n        list: list,\n        tasks: list.tasks\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No lists!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"88S4VCmt7Tr6IohUi7hXcjGJQTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useContext","TaskList","Header","AuthForm","DataContext","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","lists","sharedLists","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","list","tasks","id","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header';\nimport AuthForm from './components/AuthForm';\nimport './index.css';\nimport { DataContext } from './contexts/DataContext';\nimport { UserContext } from './contexts/UserContext';\n\nconst App = () => {\n  const { lists, sharedLists } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n\n  return (\n    <div className=\"app\">\n      {!user && <AuthForm />}\n      {user && (\n        <>\n        <Header />\n        <h1>Your Lists</h1>\n        {lists && lists.length > 0 ? (\n        lists.map((list) => <TaskList key={list.id} list={list} tasks={list.tasks} />)\n        ) : (\n          <p>No lists!</p>\n        )}\n\n        <h1>Lists shared with you</h1>\n        {lists && lists.length > 0 ? (\n        lists.map((list) => <TaskList key={list.id} list={list} tasks={list.tasks} />)\n        ) : (\n          <p>No lists!</p>\n        )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGb,UAAU,CAACI,WAAW,CAAC;EACtD,MAAM;IAAEU;EAAK,CAAC,GAAGd,UAAU,CAACK,WAAW,CAAC;EAExC,oBACEE,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjB,CAACF,IAAI,iBAAIP,OAAA,CAACJ,QAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrBN,IAAI,iBACHP,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACAT,OAAA,CAACL,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVb,OAAA;QAAAS,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBR,KAAK,IAAIA,KAAK,CAACS,MAAM,GAAG,CAAC,GAC1BT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBAAKhB,OAAA,CAACN,QAAQ;QAAesB,IAAI,EAAEA,IAAK;QAACC,KAAK,EAAED,IAAI,CAACC;MAAM,GAAvCD,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC,CAAC,gBAE5Eb,OAAA;QAAAS,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChB,eAEDb,OAAA;QAAAS,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BR,KAAK,IAAIA,KAAK,CAACS,MAAM,GAAG,CAAC,GAC1BT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBAAKhB,OAAA,CAACN,QAAQ;QAAesB,IAAI,EAAEA,IAAK;QAACC,KAAK,EAAED,IAAI,CAACC;MAAM,GAAvCD,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC,CAAC,gBAE5Eb,OAAA;QAAAS,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChB;IAAA,eACC,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAT,EAAA,CA3BKD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}