{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TaskModal from './TaskModal';\nimport { useState } from 'react';\nimport TaskListItem from './TaskListItem';\n\n// TaskList displays all of the tasks in a given list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  listName,\n  getData,\n  tasks\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false); // controls the state of the modal object\n  const sortedTasks = tasks === null || tasks === void 0 ? void 0 : tasks.sort((a, b) => new Date(a.date) - new Date(b.date)); // sorting the tasks according to date created\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create\",\n        onClick: () => setShowModal(true),\n        children: \"ADD NEW TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), sortedTasks === null || sortedTasks === void 0 ? void 0 : sortedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n      task: task,\n      getData: getData\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }, this)), showModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n      mode: 'create',\n      setShowModal: setShowModal,\n      getData: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskModal","useState","TaskListItem","jsxDEV","_jsxDEV","TaskList","listName","getData","tasks","_s","showModal","setShowModal","sortedTasks","sort","a","b","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","id","mode","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\nimport TaskModal from './TaskModal';\nimport { useState } from 'react';\nimport TaskListItem from './TaskListItem';\n\n// TaskList displays all of the tasks in a given list\nconst TaskList = ({ listName, getData, tasks }) => {\n  const [showModal, setShowModal] = useState(false) // controls the state of the modal object\n  const sortedTasks = tasks?.sort((a,b) => new Date(a.date) - new Date(b.date)) // sorting the tasks according to date created\n\n  return (\n    <div className=\"\">\n        <h1>{ listName }</h1>\n        <div className=\"button-container\">\n            <button className=\"create\" onClick={() => setShowModal(true)}>ADD NEW TASK</button>\n        </div>\n        {sortedTasks?.map((task) => <TaskListItem key={task.id} task={task} getData={getData} />)}\n        {showModal && <TaskModal mode={'create'} setShowModal={setShowModal} getData={getData} />}\n    </div>\n  );\n}\n\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,EAAC;EAClD,MAAMW,WAAW,GAAGJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC,EAAC;;EAE9E,oBACEb,OAAA;IAAKc,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACbf,OAAA;MAAAe,QAAA,EAAMb;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrBnB,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7Bf,OAAA;QAAQc,SAAS,EAAC,QAAQ;QAACM,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAAC,IAAI,CAAE;QAAAQ,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,EACLX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEa,GAAG,CAAEC,IAAI,iBAAKtB,OAAA,CAACF,YAAY;MAAewB,IAAI,EAAEA,IAAK;MAACnB,OAAO,EAAEA;IAAQ,GAAtCmB,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CAAC,CAAC,EACxFb,SAAS,iBAAIN,OAAA,CAACJ,SAAS;MAAC4B,IAAI,EAAE,QAAS;MAACjB,YAAY,EAAEA,YAAa;MAACJ,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEV,CAAC;AAAAd,EAAA,CAdKJ,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAgBd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}