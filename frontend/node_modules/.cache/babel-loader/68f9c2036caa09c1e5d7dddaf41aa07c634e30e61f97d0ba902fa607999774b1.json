{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/ShareList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ShareListContainer, ShareButton, UserIcon } from '../styles/ShareList.styled';\nimport ShareListModal from './ShareListModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareList = ({\n  list\n}) => {\n  _s();\n  const [showShareListModal, setShowShareListModal] = useState(false); // controls the state of the list modal object\n  const [sharedUsers, setSharedUsers] = useState(null);\n  const fetchSharedUsers = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/shared_lists/${list.id}/users`);\n      if (response.ok) {\n        const sharedUsersData = await response.json();\n        setSharedUsers(sharedUsersData);\n      }\n    } catch (error) {\n      console.error('Error fetching shared lists:', error);\n    }\n  };\n  useEffect(() => {\n    fetchSharedUsers();\n  }, [list]);\n  console.log(sharedUsers);\n  return /*#__PURE__*/_jsxDEV(ShareListContainer, {\n    children: [sharedUsers === null || sharedUsers === void 0 ? void 0 : sharedUsers.map(user => /*#__PURE__*/_jsxDEV(UserIcon, {\n      children: [user.name[0], \" \"]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }, this)), /*#__PURE__*/_jsxDEV(ShareButton, {\n      onClick: () => setShowShareListModal(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), showShareListModal && /*#__PURE__*/_jsxDEV(ShareListModal, {\n      setShowModal: setShowShareListModal,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ShareList, \"OagjDaqfHgl8T9lTkjDhzLfKKMw=\");\n_c = ShareList;\nexport default ShareList;\nvar _c;\n$RefreshReg$(_c, \"ShareList\");","map":{"version":3,"names":["React","useState","useEffect","ShareListContainer","ShareButton","UserIcon","ShareListModal","jsxDEV","_jsxDEV","ShareList","list","_s","showShareListModal","setShowShareListModal","sharedUsers","setSharedUsers","fetchSharedUsers","response","fetch","process","env","REACT_APP_SERVERURL","id","ok","sharedUsersData","json","error","console","log","children","map","user","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setShowModal","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/ShareList.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ShareListContainer, ShareButton, UserIcon } from '../styles/ShareList.styled';\nimport ShareListModal from './ShareListModal';\n\nconst ShareList = ({ list }) => {\n    const [showShareListModal, setShowShareListModal] = useState(false); // controls the state of the list modal object\n    const [sharedUsers, setSharedUsers] = useState(null);\n    \n    const fetchSharedUsers = async () => {\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/shared_lists/${list.id}/users`);\n            if (response.ok) {\n                const sharedUsersData = await response.json();\n                setSharedUsers(sharedUsersData);\n            }\n        } catch (error) {\n            console.error('Error fetching shared lists:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchSharedUsers();\n    }, [list]);\n\n    console.log(sharedUsers);\n\n    return (\n        <ShareListContainer>\n            {sharedUsers?.map((user) => <UserIcon key={user.id}>{ user.name[0] } </UserIcon>)}\n            <ShareButton onClick={() => setShowShareListModal(true)}>Share</ShareButton>\n            {showShareListModal && <ShareListModal setShowModal={setShowShareListModal} list={list} />}\n        </ShareListContainer>\n  );\n}\n\nexport default ShareList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,kBAAkB,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,4BAA4B;AACtF,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrE,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,iBAAgBX,IAAI,CAACY,EAAG,QAAO,CAAC;MAChG,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACb,MAAMC,eAAe,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAC7CV,cAAc,CAACS,eAAe,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZc,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEViB,OAAO,CAACC,GAAG,CAACd,WAAW,CAAC;EAExB,oBACIN,OAAA,CAACL,kBAAkB;IAAA0B,QAAA,GACdf,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEgB,GAAG,CAAEC,IAAI,iBAAKvB,OAAA,CAACH,QAAQ;MAAAwB,QAAA,GAAiBE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAC;IAAA,GAA1BD,IAAI,CAACT,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CAAC,CAAC,eACjF5B,OAAA,CAACJ,WAAW;MAACiC,OAAO,EAAEA,CAAA,KAAMxB,qBAAqB,CAAC,IAAI,CAAE;MAAAgB,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,EAC3ExB,kBAAkB,iBAAIJ,OAAA,CAACF,cAAc;MAACgC,YAAY,EAAEzB,qBAAsB;MAACH,IAAI,EAAEA;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAE7B,CAAC;AAAAzB,EAAA,CA7BKF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}