{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ListModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useCookies } from 'react-cookie';\n\n// The modal for editing or adding a list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListModal = ({\n  mode,\n  setShowModal,\n  getData,\n  list\n}) => {\n  _s();\n  const editMode = mode === 'edit' ? true : false;\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n  const [listData, setListData] = useState({\n    owner_id: editMode ? '123' : '123',\n    title: editMode ? 'list title' : 'title',\n    shared: editMode ? false : false,\n    color: 'white'\n  });\n\n  // Method for posting a new list to the database\n  const postData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(listData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create task');\n      }\n      const newList = await response.json();\n      console.log('New list created:', newList);\n      setShowModal(false);\n      getData();\n    } catch (error) {\n      console.error('Error creating task:', error.message);\n      throw error;\n    }\n  };\n  const handleChange = e => {\n    console.log(\"changing!\", e);\n    const {\n      value\n    } = e.target;\n    setListData(data => ({\n      ...data,\n      title: value\n    }));\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [mode, \" your list!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          maxLength: 30,\n          placeholder: \"List name goes here\",\n          name: \"title\",\n          value: data.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: editMode ? editData : postData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ListModal, \"NzuPmdTKgWax9bBTHddYI3fEqOY=\", false, function () {\n  return [useCookies];\n});\n_c = ListModal;\nexport default ListModal;\nvar _c;\n$RefreshReg$(_c, \"ListModal\");","map":{"version":3,"names":["React","useState","useCookies","jsxDEV","_jsxDEV","ListModal","mode","setShowModal","getData","list","_s","editMode","cookies","setCookie","removeCookie","listData","setListData","owner_id","title","shared","color","postData","e","preventDefault","response","fetch","process","env","REACT_APP_SERVERURL","method","headers","body","JSON","stringify","ok","Error","newList","json","console","log","error","message","handleChange","value","target","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","required","maxLength","placeholder","name","onChange","type","editData","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ListModal.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useCookies } from 'react-cookie';\n\n// The modal for editing or adding a list\nconst ListModal = ({ mode, setShowModal, getData, list }) => {\n    const editMode = mode === 'edit' ? true : false\n    const [cookies, setCookie, removeCookie] = useCookies(null)\n\n    const [listData, setListData] = useState({\n        owner_id: editMode ? '123' : '123',\n        title: editMode ? 'list title' : 'title',\n        shared: editMode ? false : false,\n        color: 'white'\n    })\n\n    // Method for posting a new list to the database\n    const postData = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/tasks`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(listData)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to create task');\n            }\n\n            const newList = await response.json();\n            console.log('New list created:', newList)\n            setShowModal(false)\n            getData()\n\n        } catch(error) {\n            console.error('Error creating task:', error.message);\n            throw error;\n        }\n    };\n\n    const handleChange = (e) => {\n        console.log(\"changing!\", e)\n        const { value } = e.target\n\n        setListData(data => ({\n            ...data,\n            title: value\n        }))\n        console.log(data)\n    }\n\n    return (\n        <div className=\"overlay\">\n            <div className=\"modal\">\n                <div className=\"form-title-container\">\n                    <h3>{mode} your list!</h3>\n                    <button onClick={() => setShowModal(false)}>X</button>\n                </div>\n\n                <form>\n                    <input \n                        required \n                        maxLength={30} \n                        placeholder=\"List name goes here\" \n                        name=\"title\"\n                        value={data.title} \n                        onChange={handleChange}\n                    />\n                    <br />\n                    <input type=\"submit\" onClick={editMode ? editData : postData}/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ListModal;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAMC,QAAQ,GAAGL,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;EAC/C,MAAM,CAACM,OAAO,EAAEC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,UAAU,CAAC,IAAI,CAAC;EAE3D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACrCgB,QAAQ,EAAEN,QAAQ,GAAG,KAAK,GAAG,KAAK;IAClCO,KAAK,EAAEP,QAAQ,GAAG,YAAY,GAAG,OAAO;IACxCQ,MAAM,EAAER,QAAQ,GAAG,KAAK,GAAG,KAAK;IAChCS,KAAK,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,QAAO,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MACjC,CAAC,CAAC;MACF,IAAI,CAACS,QAAQ,CAACU,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,OAAO,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MACrCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,OAAO,CAAC;MACzC7B,YAAY,CAAC,KAAK,CAAC;MACnBC,OAAO,CAAC,CAAC;IAEb,CAAC,CAAC,OAAMgC,KAAK,EAAE;MACXF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpD,MAAMD,KAAK;IACf;EACJ,CAAC;EAED,MAAME,YAAY,GAAIpB,CAAC,IAAK;IACxBgB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEjB,CAAC,CAAC;IAC3B,MAAM;MAAEqB;IAAM,CAAC,GAAGrB,CAAC,CAACsB,MAAM;IAE1B5B,WAAW,CAAC6B,IAAI,KAAK;MACjB,GAAGA,IAAI;MACP3B,KAAK,EAAEyB;IACX,CAAC,CAAC,CAAC;IACHL,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;EACrB,CAAC;EAED,oBACIzC,OAAA;IAAK0C,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpB3C,OAAA;MAAK0C,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAClB3C,OAAA;QAAK0C,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjC3C,OAAA;UAAA2C,QAAA,GAAKzC,IAAI,EAAC,aAAW;QAAA;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B/C,OAAA;UAAQgD,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,KAAK,CAAE;UAAAwC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eAEN/C,OAAA;QAAA2C,QAAA,gBACI3C,OAAA;UACIiD,QAAQ;UACRC,SAAS,EAAE,EAAG;UACdC,WAAW,EAAC,qBAAqB;UACjCC,IAAI,EAAC,OAAO;UACZb,KAAK,EAAEE,IAAI,CAAC3B,KAAM;UAClBuC,QAAQ,EAAEf;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACF/C,OAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN/C,OAAA;UAAOsD,IAAI,EAAC,QAAQ;UAACN,OAAO,EAAEzC,QAAQ,GAAGgD,QAAQ,GAAGtC;QAAS;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAzC,EAAA,CAvEKL,SAAS;EAAA,QAEgCH,UAAU;AAAA;AAAA0D,EAAA,GAFnDvD,SAAS;AAyEf,eAAeA,SAAS;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}