{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/TaskListItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TickBox from './TickBox';\nimport { useState, useContext, useEffect } from 'react';\nimport TaskModal from './TaskModal';\nimport { DataContext } from '../contexts/DataContext';\nimport { UserContext } from '../contexts/UserContext';\nimport { EditButton, EditContainer, EditedBy, InfoContainer, Item, ItemContainer, TaskTitle } from '../styles/TaskListItem.styled';\nimport { UserIcon } from '../styles/ShareList.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsis } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskListItem = ({\n  task\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const {\n    getLists,\n    getSharedLists\n  } = useContext(DataContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const [creatorData, setCreatorData] = useState({\n    email: null,\n    name: null,\n    color: null\n  });\n  const [editorData, setEditorData] = useState({\n    email: null,\n    name: null,\n    color: null\n  });\n  const fetchUserData = async () => {\n    try {\n      const creatorResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${task.creator_id}`);\n      if (creatorResponse.ok) {\n        const userData = await creatorResponse.json();\n        setCreatorData({\n          email: userData.email,\n          name: userData.name,\n          color: userData.color\n        });\n      } else {\n        console.error('Error fetching creator user data:', creatorResponse.statusText);\n      }\n      if (task.last_edited_by) {\n        const editorResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${task.last_edited_by}`);\n        if (editorResponse.ok) {\n          const userData = await editorResponse.json();\n          setEditorData({\n            email: userData.email,\n            name: userData.name,\n            color: userData.color\n          });\n        } else {\n          console.error('Error fetching creator user data:', editorResponse.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, [task]);\n  return /*#__PURE__*/_jsxDEV(Item, {\n    children: [/*#__PURE__*/_jsxDEV(ItemContainer, {\n      children: task.last_edited_by && editorData.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TickBox, {\n          task: task,\n          margin: '41px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TaskTitle, {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditedBy, {\n            children: [\"Last edited by \", editorData.email, \" (\", editorData.name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TickBox, {\n          task: task,\n          margin: '20px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n          children: /*#__PURE__*/_jsxDEV(TaskTitle, {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditContainer, {\n      children: [creatorData.name && creatorData.email && /*#__PURE__*/_jsxDEV(UserIcon, {\n        backgroundcolor: \"pink\",\n        textcolor: \"blue\",\n        email: creatorData.email,\n        children: creatorData.name[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n        onClick: () => setShowModal(true),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEllipsis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n      mode: \"edit\",\n      setShowModal: setShowModal,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskListItem, \"3LpmAiCMJ86ReDiFqdbvm5a1XXg=\");\n_c = TaskListItem;\nexport default TaskListItem;\nvar _c;\n$RefreshReg$(_c, \"TaskListItem\");","map":{"version":3,"names":["React","TickBox","useState","useContext","useEffect","TaskModal","DataContext","UserContext","EditButton","EditContainer","EditedBy","InfoContainer","Item","ItemContainer","TaskTitle","UserIcon","FontAwesomeIcon","faEllipsis","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskListItem","task","_s","showModal","setShowModal","getLists","getSharedLists","user","creatorData","setCreatorData","email","name","color","editorData","setEditorData","fetchUserData","creatorResponse","fetch","process","env","REACT_APP_SERVERURL","creator_id","ok","userData","json","console","error","statusText","last_edited_by","editorResponse","children","margin","fileName","_jsxFileName","lineNumber","columnNumber","title","backgroundcolor","textcolor","onClick","icon","mode","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/TaskListItem.js"],"sourcesContent":["import React from 'react';\nimport TickBox from './TickBox';\nimport { useState, useContext, useEffect } from 'react';\nimport TaskModal from './TaskModal'\nimport { DataContext } from '../contexts/DataContext';\nimport { UserContext } from '../contexts/UserContext';\nimport { EditButton, EditContainer, EditedBy, InfoContainer, Item, ItemContainer, TaskTitle } from '../styles/TaskListItem.styled';\nimport { UserIcon } from '../styles/ShareList.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsis } from '@fortawesome/free-solid-svg-icons';\n\nconst TaskListItem = ({task}) => {\n  const [showModal, setShowModal] = useState(false)\n  const { getLists, getSharedLists } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const [creatorData, setCreatorData] = useState({\n    email: null,\n    name: null,\n    color: null\n  });\n  const [editorData, setEditorData] = useState({\n    email: null,\n    name: null,\n    color: null\n  });\n\n  const fetchUserData = async () => {\n    try {\n      const creatorResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${task.creator_id}`);\n      if (creatorResponse.ok) {\n        const userData = await creatorResponse.json();\n        setCreatorData({ \n          email: userData.email, \n          name: userData.name,\n          color: userData.color\n        });\n      } else {\n        console.error('Error fetching creator user data:', creatorResponse.statusText);\n      }\n      if (task.last_edited_by) {\n        const editorResponse = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${task.last_edited_by}`);\n        if (editorResponse.ok) {\n          const userData = await editorResponse.json();\n          setEditorData({ \n            email: userData.email, \n            name: userData.name,\n            color: userData.color\n          });\n        } else {\n          console.error('Error fetching creator user data:', editorResponse.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, [task]);\n\n  return (\n    <Item>\n      <ItemContainer>\n        {task.last_edited_by && editorData.name ? (\n          <>\n            <TickBox task={task} margin={'41px'}/>\n            <InfoContainer>\n              <TaskTitle>{task.title}</TaskTitle>\n              <EditedBy>Last edited by {editorData.email} ({editorData.name})</EditedBy>\n            </InfoContainer>\n          </>\n        ) : (\n          <>\n            <TickBox task={task} margin={'20px'}/>\n            <InfoContainer>\n              <TaskTitle>{task.title}</TaskTitle>\n            </InfoContainer>\n          </>\n        )}\n      </ItemContainer>\n\n      <EditContainer>\n        {creatorData.name && creatorData.email && (\n            <UserIcon \n            backgroundcolor='pink'\n            textcolor='blue'\n            email={creatorData.email}\n            >\n            { creatorData.name[0] } \n          </UserIcon>\n        )}\n        <EditButton onClick={() => setShowModal(true)}><FontAwesomeIcon icon={faEllipsis} /></EditButton>\n      </EditContainer>\n      {showModal && <TaskModal mode='edit' setShowModal={setShowModal} task={task}/>}\n    </Item>\n  );\n}\n\nexport default TaskListItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}