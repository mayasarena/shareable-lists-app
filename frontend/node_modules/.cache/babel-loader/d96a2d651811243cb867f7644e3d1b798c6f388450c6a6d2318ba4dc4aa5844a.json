{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TaskModal from './TaskModal';\nimport ListModal from './ListModal';\nimport ShareList from './ShareList';\nimport ShareListModal from './ShareListModal';\nimport { useState, useEffect } from 'react';\nimport TaskListItem from './TaskListItem';\nimport { UserContext } from '../contexts/UserContext';\nimport { useContext } from 'react';\nimport { ListTitle, TaskListContainer, ListDetails, TitleContainer, HeaderContainer, ListTitleContainer, EditListButton, TasksContainer } from '../styles/TaskList.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport AddTask from './AddTask';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\n\n// TaskList displays all of the tasks in a given list\nconst TaskList = ({\n  list,\n  tasks\n}) => {\n  _s();\n  const [showTaskModal, setShowTaskModal] = useState(false); // controls the state of the task modal object\n  const [showListModal, setShowListModal] = useState(false); // controls the state of the list modal object\n  const {\n    user\n  } = useContext(UserContext);\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${list.owner_id}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setOwnerData({\n          email: userData.email,\n          name: userData.name\n        });\n      } else {\n        console.error('Error fetching user data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(TaskListContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ListTitleContainer, {\n          children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n            color: list.color,\n            children: [list.title, \" (\", tasks.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), list.owner_id === user.uid && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(EditListButton, {\n              className: \"edit\",\n              onClick: () => setShowListModal(true),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPenToSquare\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 89\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListDetails, {\n          children: [\"Created by\", list.owner_id === user.uid ? ' Me ' : ` ${ownerData.name} `, \"(\", ownerData.email, \") on \", new Date(list.date).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShareList, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TasksContainer, {\n      children: [tasks === null || tasks === void 0 ? void 0 : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n        list: list,\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this)), showTaskModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n        mode: 'create',\n        setShowModal: setShowTaskModal,\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), showListModal && /*#__PURE__*/_jsxDEV(ListModal, {\n        mode: 'edit',\n        setShowModal: setShowListModal,\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"99e+RVwa20dF2K7WnV+Yk1lQyHk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskModal","ListModal","ShareList","ShareListModal","useState","useEffect","TaskListItem","UserContext","useContext","ListTitle","TaskListContainer","ListDetails","TitleContainer","HeaderContainer","ListTitleContainer","EditListButton","TasksContainer","FontAwesomeIcon","faPenToSquare","AddTask","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","TaskList","list","tasks","_s","showTaskModal","setShowTaskModal","showListModal","setShowListModal","user","ownerData","setOwnerData","email","name","fetchUserData","response","fetch","process","env","REACT_APP_SERVERURL","owner_id","ok","userData","json","console","error","statusText","children","color","title","length","fileName","_jsxFileName","lineNumber","columnNumber","uid","className","onClick","icon","Date","date","toLocaleDateString","year","month","day","map","task","id","mode","setShowModal","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\nimport TaskModal from './TaskModal';\nimport ListModal from './ListModal';\nimport ShareList from './ShareList';\nimport ShareListModal from './ShareListModal';\nimport { useState, useEffect } from 'react';\nimport TaskListItem from './TaskListItem';\nimport { UserContext } from '../contexts/UserContext';\nimport { useContext } from 'react';\nimport { ListTitle, TaskListContainer, ListDetails, TitleContainer, HeaderContainer, ListTitleContainer, EditListButton, TasksContainer } from '../styles/TaskList.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport AddTask from './AddTask';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000');\n\n// TaskList displays all of the tasks in a given list\nconst TaskList = ({ list, tasks }) => {\n  const [showTaskModal, setShowTaskModal] = useState(false); // controls the state of the task modal object\n  const [showListModal, setShowListModal] = useState(false); // controls the state of the list modal object\n  const { user } = useContext(UserContext);\n  const [ownerData, setOwnerData] = useState({\n    email: null,\n    name: null\n  });\n\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/users/${list.owner_id}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setOwnerData({ \n          email: userData.email, \n          name: userData.name \n        });\n      } else {\n        console.error('Error fetching user data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, [list]);\n\n\n\n  return (\n    <TaskListContainer>\n      <HeaderContainer>\n        <TitleContainer>\n          <ListTitleContainer>\n            <ListTitle color={list.color}>{ list.title } ({tasks.length})</ListTitle>\n            {(list.owner_id === user.uid) && \n              <>\n                <EditListButton className=\"edit\" onClick={() => setShowListModal(true)}><FontAwesomeIcon icon={faPenToSquare} /></EditListButton>\n              </>\n            }\n          </ListTitleContainer>\n            <ListDetails>Created by \n              {list.owner_id === user.uid ? ' Me ' : ` ${ownerData.name} `} \n              ({ownerData.email}) on {new Date(list.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</ListDetails>\n        </TitleContainer>\n        <ShareList list={list}/>\n      </HeaderContainer>\n        <AddTask list={list}/>\n        <TasksContainer>\n          {tasks?.map((task) => <TaskListItem key={task.id} list={list} task={task} />)}\n          {showTaskModal && <TaskModal mode={'create'} setShowModal={setShowTaskModal} list={list} />}\n          {showListModal && <ListModal mode={'edit'} setShowModal={setShowListModal} list={list} />}\n        </TasksContainer>\n    </TaskListContainer>\n  );\n}\n\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,cAAc,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,2BAA2B;AAC1K,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;;AAE1C;AACA,MAAMM,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM;IAAE8B;EAAK,CAAC,GAAG1B,UAAU,CAACD,WAAW,CAAC;EACxC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC;IACzCiC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,UAASjB,IAAI,CAACkB,QAAS,EAAC,CAAC;MACzF,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACtCZ,YAAY,CAAC;UACXC,KAAK,EAAEU,QAAQ,CAACV,KAAK;UACrBC,IAAI,EAAES,QAAQ,CAACT;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLW,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEV,QAAQ,CAACW,UAAU,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED7C,SAAS,CAAC,MAAM;IACdkC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAIV,oBACEL,OAAA,CAACZ,iBAAiB;IAAA0C,QAAA,gBAChB9B,OAAA,CAACT,eAAe;MAAAuC,QAAA,gBACd9B,OAAA,CAACV,cAAc;QAAAwC,QAAA,gBACb9B,OAAA,CAACR,kBAAkB;UAAAsC,QAAA,gBACjB9B,OAAA,CAACb,SAAS;YAAC4C,KAAK,EAAE1B,IAAI,CAAC0B,KAAM;YAAAD,QAAA,GAAGzB,IAAI,CAAC2B,KAAK,EAAE,IAAE,EAAC1B,KAAK,CAAC2B,MAAM,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,EACvEhC,IAAI,CAACkB,QAAQ,KAAKX,IAAI,CAAC0B,GAAG,iBAC1BtC,OAAA,CAAAE,SAAA;YAAA4B,QAAA,eACE9B,OAAA,CAACP,cAAc;cAAC8C,SAAS,EAAC,MAAM;cAACC,OAAO,EAAEA,CAAA,KAAM7B,gBAAgB,CAAC,IAAI,CAAE;cAAAmB,QAAA,eAAC9B,OAAA,CAACL,eAAe;gBAAC8C,IAAI,EAAE7C;cAAc;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB;UAAC,gBACjI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEa,CAAC,eACnBrC,OAAA,CAACX,WAAW;UAAAyC,QAAA,GAAC,YACX,EAACzB,IAAI,CAACkB,QAAQ,KAAKX,IAAI,CAAC0B,GAAG,GAAG,MAAM,GAAI,IAAGzB,SAAS,CAACG,IAAK,GAAE,EAAC,GAC5D,EAACH,SAAS,CAACE,KAAK,EAAC,OAAK,EAAC,IAAI2B,IAAI,CAACrC,IAAI,CAACsC,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAU,CAAC,CAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChI,CAAC,eACjBrC,OAAA,CAACpB,SAAS;QAACyB,IAAI,EAAEA;MAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAChBrC,OAAA,CAACH,OAAO;MAACQ,IAAI,EAAEA;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBrC,OAAA,CAACN,cAAc;MAAAoC,QAAA,GACZxB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE0C,GAAG,CAAEC,IAAI,iBAAKjD,OAAA,CAAChB,YAAY;QAAeqB,IAAI,EAAEA,IAAK;QAAC4C,IAAI,EAAEA;MAAK,GAAhCA,IAAI,CAACC,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAAC,CAAC,EAC5E7B,aAAa,iBAAIR,OAAA,CAACtB,SAAS;QAACyE,IAAI,EAAE,QAAS;QAACC,YAAY,EAAE3C,gBAAiB;QAACJ,IAAI,EAAEA;MAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1F3B,aAAa,iBAAIV,OAAA,CAACrB,SAAS;QAACwE,IAAI,EAAE,MAAO;QAACC,YAAY,EAAEzC,gBAAiB;QAACN,IAAI,EAAEA;MAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAExB,CAAC;AAAA9B,EAAA,CA1DKH,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}