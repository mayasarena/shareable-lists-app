{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport ListModal from './ListModal';\nimport { useState } from 'react';\nimport { DataContext } from '../contexts/DataContext';\nimport { SidebarContainer, SidebarListsContainer, ListButton, Header, AddListButton } from '../styles/Sidebar.styled.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  selectedList,\n  setSelectedList\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false); // controls the state of the modal object\n  const {\n    lists,\n    sharedLists\n  } = useContext(DataContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AddListButton, {\n        onClick: () => setShowModal(true),\n        children: \"Create List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SidebarListsContainer, {\n        children: /*#__PURE__*/_jsxDEV(ListButton, {\n          onClick: () => setSelectedList(null),\n          isSelected: !selectedList,\n          color: \"#2d7dfc\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), lists && lists.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Your Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SidebarListsContainer, {\n          children: lists.map(list => /*#__PURE__*/_jsxDEV(ListButton, {\n            onClick: () => setSelectedList(list),\n            isSelected: selectedList && list.id === selectedList.id,\n            color: list.color,\n            children: list.title\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), sharedLists && sharedLists.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Shared Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SidebarListsContainer, {\n          children: sharedLists.map(sharedList => /*#__PURE__*/_jsxDEV(ListButton, {\n            onClick: () => setSelectedList(sharedList),\n            isSelected: selectedList && sharedList.id === selectedList.id,\n            color: sharedList.color,\n            children: sharedList.title\n          }, sharedList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ListModal, {\n      mode: \"create\",\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n_s(Sidebar, \"blMQuyoieI33WPPi17UKS4+inKs=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","UserContext","ListModal","useState","DataContext","SidebarContainer","SidebarListsContainer","ListButton","Header","AddListButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","selectedList","setSelectedList","_s","showModal","setShowModal","lists","sharedLists","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isSelected","color","length","map","list","id","title","sharedList","mode","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/src/components/Sidebar.js"],"sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport ListModal from './ListModal';\nimport { useState } from 'react';\nimport { DataContext } from '../contexts/DataContext';\nimport { SidebarContainer, SidebarListsContainer, ListButton, Header, AddListButton } from '../styles/Sidebar.styled.js';\n\nconst Sidebar = ({ selectedList, setSelectedList }) => {\n    const [showModal, setShowModal] = useState(false) // controls the state of the modal object\n    const { lists, sharedLists } = useContext(DataContext);\n    \n  return (\n    <>\n    <SidebarContainer>\n        <AddListButton onClick={() => setShowModal(true)}>Create List</AddListButton>\n\n        <SidebarListsContainer>\n            <ListButton \n                onClick={() => setSelectedList(null)}\n                isSelected={!selectedList}\n                color='#2d7dfc'\n                >\n                    Dashboard\n            </ListButton>\n        </SidebarListsContainer>\n\n        {lists && lists.length > 0 && (\n            <>\n                <Header>Your Lists</Header>\n                <SidebarListsContainer>\n                    {lists.map((list) => \n                        <ListButton\n                            key={list.id} \n                            onClick={() => setSelectedList(list)}\n                            isSelected={selectedList && list.id === selectedList.id}\n                            color={list.color}\n                        >\n                            { list.title }\n                    </ListButton>\n                )}\n                </SidebarListsContainer>\n            </>\n        )}\n\n        {sharedLists && sharedLists.length > 0 && (\n            <>\n                <Header>Shared Lists</Header>\n                <SidebarListsContainer>\n                    {sharedLists.map((sharedList) => \n                        <ListButton\n                            key={sharedList.id} \n                            onClick={() => setSelectedList(sharedList)}\n                            isSelected={selectedList && sharedList.id === selectedList.id}\n                            color={sharedList.color}\n                        >\n                            { sharedList.title }\n                    </ListButton>\n                )}\n                </SidebarListsContainer>\n            </>\n        )}\n    </SidebarContainer>\n    {showModal && <ListModal mode='create' setShowModal={setShowModal} />}\n    </>\n  );\n}\n\nexport default Sidebar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}