{"ast":null,"code":"var _excluded = [\"date\", \"verboseDate\", \"tooltip\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nexport default function Time(_ref, ref) {\n  var date = _ref.date,\n    verboseDate = _ref.verboseDate,\n    tooltip = _ref.tooltip,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var isoString = useMemo(function () {\n    return date.toISOString();\n  }, [date]);\n  return /*#__PURE__*/React.createElement(\"time\", _extends({\n    ref: ref\n  }, rest, {\n    dateTime: isoString,\n    title: tooltip ? verboseDate : undefined\n  }), children);\n} // https://gitlab.com/catamphetamine/react-time-ago/-/issues/5\n//\n// Someone used this component with \"Material UI\"'s `<Tooltip/>` component,\n// and that component required `children` be `ref`-able.\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-material/src/Tooltip/Tooltip.js#L494-L496\n// \n// That component seems to only be using that `ref-`ability to check whether \n// the `children` element qualifies for `:focus-visible` selector.\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-utils/src/useIsFocusVisible.ts#L105\n//\n\nTime = /*#__PURE__*/React.forwardRef(Time);\nTime.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  verboseDate: PropTypes.string,\n  tooltip: PropTypes.bool.isRequired,\n  children: PropTypes.string.isRequired\n};","map":{"version":3,"names":["React","useMemo","PropTypes","Time","_ref","ref","date","verboseDate","tooltip","children","rest","_objectWithoutProperties","_excluded","isoString","toISOString","createElement","_extends","dateTime","title","undefined","forwardRef","propTypes","instanceOf","Date","isRequired","string","bool"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/frontend/node_modules/react-time-ago/source/Time.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Time({\r\n\tdate,\r\n\tverboseDate,\r\n\ttooltip,\r\n\tchildren,\r\n\t...rest\r\n}, ref) {\r\n\tconst isoString = useMemo(() => date.toISOString(), [date])\r\n\treturn (\r\n\t\t<time\r\n\t\t\tref={ref}\r\n\t\t\t{...rest}\r\n\t\t\tdateTime={isoString}\r\n\t\t\ttitle={tooltip ? verboseDate : undefined}>\r\n\t\t\t{children}\r\n\t\t</time>\r\n\t)\r\n}\r\n\r\n// https://gitlab.com/catamphetamine/react-time-ago/-/issues/5\r\n//\r\n// Someone used this component with \"Material UI\"'s `<Tooltip/>` component,\r\n// and that component required `children` be `ref`-able.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-material/src/Tooltip/Tooltip.js#L494-L496\r\n// \r\n// That component seems to only be using that `ref-`ability to check whether \r\n// the `children` element qualifies for `:focus-visible` selector.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-utils/src/useIsFocusVisible.ts#L105\r\n//\r\nTime = React.forwardRef(Time)\r\n\r\nTime.propTypes = {\r\n\tdate: PropTypes.instanceOf(Date).isRequired,\r\n\tverboseDate: PropTypes.string,\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.string.isRequired\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,IAATA,CAAAC,IAAA,EAMZC,GANY,EAMP;EAAA,IALPC,IAKO,GAAAF,IAAA,CALPE,IAKO;IAJPC,WAIO,GAAAH,IAAA,CAJPG,WAIO;IAHPC,OAGO,GAAAJ,IAAA,CAHPI,OAGO;IAFPC,QAEO,GAAAL,IAAA,CAFPK,QAEO;IADJC,IACI,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EACP,IAAMC,SAAS,GAAGZ,OAAO,CAAC;IAAA,OAAMK,IAAI,CAACQ,WAAL,EAAN;EAAA,CAAD,EAA2B,CAACR,IAAD,CAA3B,CAAzB;EACA,oBACCN,KAAA,CAAAe,aAAA,SAAAC,QAAA;IACCX,GAAG,EAAEA;EADN,GAEKK,IAFL;IAGCO,QAAQ,EAAEJ,SAHX;IAICK,KAAK,EAAEV,OAAO,GAAGD,WAAH,GAAiBY;EAJhC,IAKEV,QALF,CADD;AASA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,IAAI,gBAAGH,KAAK,CAACoB,UAAN,CAAiBjB,IAAjB,CAAP;AAEAA,IAAI,CAACkB,SAAL,GAAiB;EAChBf,IAAI,EAAEJ,SAAS,CAACoB,UAAV,CAAqBC,IAArB,EAA2BC,UADjB;EAEhBjB,WAAW,EAAEL,SAAS,CAACuB,MAFP;EAGhBjB,OAAO,EAAEN,SAAS,CAACwB,IAAV,CAAeF,UAHR;EAIhBf,QAAQ,EAAEP,SAAS,CAACuB,MAAV,CAAiBD;AAJX,CAAjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}