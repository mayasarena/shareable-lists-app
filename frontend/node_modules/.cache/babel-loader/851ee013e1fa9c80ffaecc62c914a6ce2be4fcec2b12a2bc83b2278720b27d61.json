{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/TickBox.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickBox = ({\n  task\n}) => {\n  _s();\n  const [completed, setCompleted] = useState(task.completed);\n  const updateCompleted = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/tasks/${task.id}/completed`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: {\n          completed: !completed\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n      console.log('successfully updated task completion');\n      setCompleted(!completed);\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateCompleted,\n      children: completed ? 'Completed' : 'Not Completed'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TickBox, \"7XsUvji2i7+BIckDIqPP1jvQ5mA=\");\n_c = TickBox;\nexport default TickBox;\nvar _c;\n$RefreshReg$(_c, \"TickBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TickBox","task","_s","completed","setCompleted","updateCompleted","response","fetch","process","env","REACT_APP_SERVERURL","id","method","headers","body","ok","Error","console","log","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/TickBox.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst TickBox = ({ task }) => {\n  const [completed, setCompleted] = useState(task.completed);\n\n  const updateCompleted = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/tasks/${task.id}/completed`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: ({ completed: !completed })\n    });\n      if (!response.ok) {\n        throw new Error('Failed to update task');\n      }\n\n      console.log('successfully updated task completion');\n      setCompleted(!completed);\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={updateCompleted}>{completed ? 'Completed' : 'Not Completed'}</button>\n    </div>\n  );\n}\n\nexport default TickBox;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAACI,IAAI,CAACE,SAAS,CAAC;EAE1D,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,UAAST,IAAI,CAACU,EAAG,YAAW,EAAE;QAC5FC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAG;UAAEX,SAAS,EAAE,CAACA;QAAU;MACnC,CAAC,CAAC;MACA,IAAI,CAACG,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEAC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnDd,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAQsB,OAAO,EAAEhB,eAAgB;MAAAe,QAAA,EAAEjB,SAAS,GAAG,WAAW,GAAG;IAAe;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEV,CAAC;AAAAvB,EAAA,CA5BKF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}