{"ast":null,"code":"var _jsxFileName = \"/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ListModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport { DataContext } from '../contexts/DataContext';\nimport { UserContext } from '../contexts/UserContext';\n\n// The modal for editing or adding a list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListModal = ({\n  mode,\n  setShowModal,\n  list\n}) => {\n  _s();\n  const editMode = mode === 'edit' ? true : false;\n  const {\n    getLists,\n    getSharedLists\n  } = useContext(DataContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const [listData, setListData] = useState({\n    owner_id: editMode ? list.owner_id : user.uid,\n    title: editMode ? list.title : '',\n    shared: editMode ? list.shared : false,\n    color: editMode ? list.color : 'white'\n  });\n\n  // Method for posting a new list to the database\n  const postListData = async e => {\n    console.log('posting list data');\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(listData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create list');\n      }\n      const newList = await response.json();\n      console.log('New list created:', newList);\n      setShowModal(false);\n      getData();\n    } catch (error) {\n      console.error('Error creating list:', error.message);\n      throw error;\n    }\n  };\n  const editListData = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(listData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to edit list');\n      }\n      const editedList = await response.json();\n      console.log('List edited:', editedList);\n      setShowModal(false);\n      getData();\n    } catch (error) {\n      console.error('Error editing list:', error.message);\n      throw error;\n    }\n  };\n  const deleteList = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        getData();\n      } else {\n        console.error(`Error deleting list: ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error('Error deleting list:', error);\n    }\n  };\n  const handleChange = e => {\n    console.log(\"changing!\", e);\n    const {\n      value\n    } = e.target;\n    setListData(listData => ({\n      ...listData,\n      title: value\n    }));\n    console.log(listData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [mode, \" your list!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editMode ? editListData : postListData,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          maxLength: 30,\n          placeholder: \"List name goes here\",\n          name: \"title\",\n          value: listData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteList,\n          children: \"DELETE LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(ListModal, \"uGrPBlsGxdQd7A635G76Fzde/oA=\");\n_c = ListModal;\nexport default ListModal;\nvar _c;\n$RefreshReg$(_c, \"ListModal\");","map":{"version":3,"names":["React","useState","useContext","DataContext","UserContext","jsxDEV","_jsxDEV","ListModal","mode","setShowModal","list","_s","editMode","getLists","getSharedLists","user","listData","setListData","owner_id","uid","title","shared","color","postListData","e","console","log","preventDefault","response","fetch","process","env","REACT_APP_SERVERURL","method","headers","body","JSON","stringify","ok","Error","newList","json","getData","error","message","editListData","id","editedList","deleteList","statusText","handleChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","required","maxLength","placeholder","name","onChange","type","_c","$RefreshReg$"],"sources":["/Users/mayamon/Desktop/dev projs/list-app/front/src/components/ListModal.js"],"sourcesContent":["import React from 'react';\nimport { useState, useContext } from 'react';\nimport { DataContext } from '../contexts/DataContext';\nimport { UserContext } from '../contexts/UserContext';\n\n// The modal for editing or adding a list\nconst ListModal = ({ mode, setShowModal, list }) => {\n    const editMode = mode === 'edit' ? true : false\n    const { getLists, getSharedLists } = useContext(DataContext);\n    const { user } = useContext(UserContext);\n\n    const [listData, setListData] = useState({\n        owner_id: editMode ? list.owner_id : user.uid,\n        title: editMode ? list.title : '',\n        shared: editMode ? list.shared : false,\n        color: editMode ? list.color : 'white'\n    })\n\n    // Method for posting a new list to the database\n    const postListData = async (e) => {\n        console.log('posting list data');\n        e.preventDefault()\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(listData)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to create list');\n            }\n\n            const newList = await response.json();\n            console.log('New list created:', newList)\n            setShowModal(false)\n            getData()\n\n        } catch(error) {\n            console.error('Error creating list:', error.message);\n            throw error;\n        }\n    };\n\n    const editListData = async(e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n                method: 'PUT',\n                headers: { \n                    'Content-Type': 'application/json' \n                },\n                body: JSON.stringify(listData)\n            });\n            if (!response.ok) {\n                throw new Error('Failed to edit list');\n            }\n\n            const editedList = await response.json();\n            console.log('List edited:', editedList);\n            setShowModal(false);\n            getData();\n        } catch(error) {\n            console.error('Error editing list:', error.message);\n            throw error;\n        }\n    }\n\n    const deleteList = async () => {\n        try {\n          const response = await fetch(`${process.env.REACT_APP_SERVERURL}/lists/${list.id}`, {\n            method: 'DELETE'\n          });\n          if (response.ok) {\n            getData();\n          } else {\n            console.error(`Error deleting list: ${response.statusText}`);\n          }\n        } catch (error) {\n          console.error('Error deleting list:', error);\n        }\n      }\n\n    const handleChange = (e) => {\n        console.log(\"changing!\", e)\n        const { value } = e.target\n\n        setListData(listData => ({\n            ...listData,\n            title: value\n        }));\n        console.log(listData)\n    };\n\n    return (\n        <div className=\"overlay\">\n            <div className=\"modal\">\n                <div className=\"form-title-container\">\n                    <h3>{mode} your list!</h3>\n                    <button onClick={() => setShowModal(false)}>X</button>\n                </div>\n\n                <form onSubmit={editMode ? editListData : postListData}>\n                    <input \n                        required \n                        maxLength={30} \n                        placeholder=\"List name goes here\" \n                        name=\"title\"\n                        value={listData.title} \n                        onChange={handleChange}\n                    />\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                    {editMode && <button onClick={deleteList}>DELETE LIST</button>}\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ListModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}